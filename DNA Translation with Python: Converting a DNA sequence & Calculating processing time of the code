'''A small project to do DNA Translation with given DNA sequence using Python Programming'''

Assumptions:
1. Sample DNA sequence is taken from official website of National Center for Biotechnology Information (NCBI) which providing access
   to biomedical and genomic information to study by scientists accross the world.
   Source: https://www.ncbi.nlm.nih.gov/nuccore/NM_207618.2
2. In nature, the conversion process inside all living beings follow: DNA -> RNA -> protein(amino acid sequence)
3. The DNA code sample is taken as an input to our program and is stored seperately in file 'dna.txt' in our python directory.
   (We can check our default python directory by typing command pwd in IPython shell)
4. Use of read_input function which cleans the DNA sequence text file to remove special characters

Goal:
To convert/translate DNA sequence to protein sequence basis a mapping table provided by NCBI '''
-----------------------------------------------------------------------------------------------------------------------------------------
import string
import time

def translate(seq):
    """ DNA Translation function: To translate neucleotide sequence into a sequence of amino acids.
        Neucleotides are translated in triplets using the table dictionary into each amino acide
        which is actually a string of length 1"""
# Fun Fact: if we type 'help(translate)' in python shell, it will show us the above mentioned docscript for the function
    table = {                                                 # Mapping provided by NCBI
        'ATA': 'I', 'ATC': 'I', 'ATT': 'I', 'ATG': 'M',
        'ACA': 'T', 'ACC': 'T', 'ACG': 'T', 'ACT': 'T',
        'AAC': 'N', 'AAT': 'N', 'AAA': 'K', 'AAG': 'K',
        'AGC': 'S', 'AGT': 'S', 'AGA': 'R', 'AGG': 'R',
        'CTA': 'L', 'CTC': 'L', 'CTG': 'L', 'CTT': 'L',
        'CCA': 'P', 'CCC': 'P', 'CCG': 'P', 'CCT': 'P',
        'CAC': 'H', 'CAT': 'H', 'CAA': 'Q', 'CAG': 'Q',
        'CGA': 'R', 'CGC': 'R', 'CGG': 'R', 'CGT': 'R',
        'GTA': 'V', 'GTC': 'V', 'GTG': 'V', 'GTT': 'V',
        'GCA': 'A', 'GCC': 'A', 'GCG': 'A', 'GCT': 'A',
        'GAC': 'D', 'GAT': 'D', 'GAA': 'E', 'GAG': 'E',
        'GGA': 'G', 'GGC': 'G', 'GGG': 'G', 'GGT': 'G',
        'TCA': 'S', 'TCC': 'S', 'TCG': 'S', 'TCT': 'S',
        'TTC': 'F', 'TTT': 'F', 'TTA': 'L', 'TTG': 'L',
        'TAC': 'Y', 'TAT': 'Y', 'TAA': '_', 'TAG': '_',
        'TGC': 'C', 'TGT': 'C', 'TGA': '_', 'TGG': 'W',
    }

    seq = seq.upper()
    protein=""
    if len(seq)%3 == 0:
        for i in range(0,len(seq),3):
            subset = seq[i:i+3]
            protein += table[subset]
    else:
        print("Sequence not divisible by 3")
    return protein

def read_seq(input_file):
    '''To remove special characters from the DNA sequence'''
    with open(input_file,"r") as f:     # r - for reading purpose only
        seq=f.read()
    print("Length of sequence: " + str(len(seq[20:938])))  # sequence starts at position 20 and ends at position 298 as per NCBI website
    seq = seq.replace("\n", "")
    seq = seq.replace("\r", "")
    print("DNA sequence:\n" + str(seq))
    return seq


input_file='dna.txt'
seq = read_seq(input_file)
start_time= time.clock()          #storing start time of the processing
protein = translate(seq[20:938])  #sequence starts at position 20 and ends at position 298 as per NCBI website
end_time=time.clock()             #storing end time of the processing
diff= end_time - start_time
print("Protein sequence:\n" + str(protein))
print("\nProcessing Time (in sec):\t" + str(diff))

